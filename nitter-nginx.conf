# HTTPS server block for Nitter
server {
    listen 443 ssl;
    server_name x.geddle.com;
    
    # SSL certificate configuration - using existing certificates
    ssl_certificate /etc/letsencrypt/live/geddle.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/geddle.com/privkey.pem;
    
    # Recommended SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    
    # Access and error logs
    access_log /var/log/nginx/nitter.access.log;
    error_log /var/log/nginx/nitter.error.log;

    # Serve Nitter static files directly
    location /css/ {
        alias /home/geddle/github/nitter/public/css/;
        expires 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
    }

    location /js/ {
        alias /home/geddle/github/nitter/public/js/;
        expires 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
    }

    location /fonts/ {
        alias /home/geddle/github/nitter/public/fonts/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000, immutable";
    }

    location /icons/ {
        alias /home/geddle/github/nitter/public/icons/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000, immutable";
    }

    location /emoji/ {
        alias /home/geddle/github/nitter/public/emoji/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000, immutable";
    }

    # Proxy all other requests to Nitter
    location / {
        proxy_pass http://localhost:8686;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
        proxy_read_timeout 300s;
        
        # Nitter specific headers
        proxy_set_header Accept-Encoding "";
    }
    
    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "no-referrer";
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_comp_level 6;
    
    # Client body size for uploads
    client_max_body_size 10M;
}

# HTTP redirect to HTTPS
server {
    listen 80;
    server_name x.geddle.com;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}